Schedule (+ progress tracking)
- [x] 12/10: get client + app idea
- [x] 12/15: design company logo
- [x] 12/22: design prototype
- [x] 12/23: show prototype to client (get + record feedback)
- [x] 12/25: update prototype accordingly
  note: finished one day early
- [ ] 12/31: create algorithm
- [ ] 01/07: create code (leeway for small errors)
- [ ] 01/08: show product to client (get + record feedback)
- [ ] 01/12: implement feedback in code
- [ ] 01/15: test cases + edit code if errors
- [ ] 01/16: close project

Meetings
- [x] 12/23, 3:00 p.m. - 4:00 p.m.: show prototype to client
  feedback recieved:
    - make events that have already passed purple
    - make events that repeat same colour as regular events (i.e. change from purple to green)
    - unitalicize "Go to: [...]" in search bar
    - when hovering over "Go to: [...]" in search bar, underline (instead of bold)
    - add lines between dates in search bar
    - when hovering over event in search bar, underline (instead of enclose in grey circling)
    - settings option to change colours
- [x] 12/23, 4:00 p.m. - 5:00 p.m.: team meeting to discuss feedback received (decide what to implement and what not)
  note: implement all feedback except last point (decided could take too long to implement)

Pre-planning
- company name: SONRAY Calendars
- company logo: see Calendar Logo.png
- client: Rahana Ashraf
- client needs: calendar for general utility (manage events, check dates, etc.)

Division of labour
- Sameer: get client, schedule client meetings
- Owen: company logo, prototype (only extra icons and search bar)
- Nuzhat: create schedule + track progress, prototype (except extra icons and search bar)
- work divided in several small sections: algorithm, code

Prototype
- see Prototype.pdf
- see Prototype (after feedback).pdf

Algorithm
- create enum with months and their number of days (add method to set Feb = 28 when not leap year, Feb = 29 when leap year)
- equation for finding what day of week month starts on:
  weekday = (1 + floor(2.6*month - 0.2) - 2*century + yearInCentury + floor(yearInCentury/4) + floor(century/4)) mod 7
  - weekday is weekday (sunday = 0, saturday = 6)
  - month is month with different numbering (march = 1, april = 2, ... jan = 11, feb = 12)
  - if month is jan or feb, use previous year for next two steps
  - century is century (e.g. if year is 2018, century = 20)
  - yearInCentury is last two digits of year (e.g. if year is 2018, yearInCentury = 18)
